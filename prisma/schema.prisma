// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define your models here
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username      String @unique
  name      String?
  password String
  bookings  Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServiceProvider {
  id        Int      @id @default(autoincrement())
  name      String?
  username  String   @unique
  email     String   @unique
  serviceType String
  password  String
  phone     String?
  latitude  Float?
  longitude Float?
  address   String?
  services  Service[]
  notifications Notification[]
}

model Service {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  category    String
  imageUrl    String?
  provider    ServiceProvider @relation(fields: [providerId], references: [id])
  providerId  Int
  bookings    Booking[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Booking {
  id              Int      @id @default(autoincrement())
  service         Service  @relation(fields: [serviceId], references: [id])
  serviceId       Int
  customer        User     @relation(fields: [customerId], references: [id])
  customerId      Int
  customerName    String
  customerEmail   String
  customerPhone   String
  customerAddress String
  scheduledDate   DateTime
  scheduledTime   String
  status          BookingStatus @default(PENDING)
  totalAmount     Float
  notes           String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Notification {
  id          Int      @id @default(autoincrement())
  provider    ServiceProvider @relation(fields: [providerId], references: [id])
  providerId  Int
  title       String
  message     String
  type        NotificationType @default(BOOKING)
  isRead      Boolean @default(false)
  bookingId   Int?
  createdAt   DateTime @default(now())
}

enum BookingStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  REJECTED
}

enum NotificationType {
  BOOKING
  BOOKING_UPDATE
  SYSTEM
}